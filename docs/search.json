[
  {
    "objectID": "pages/combining.html",
    "href": "pages/combining.html",
    "title": "Combining Excel and Delimited Data",
    "section": "",
    "text": "For this task, we will manipulate and combine two wine datasets.\nFirst, we need to load our packages.\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'purrr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'forcats' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readxl)\nlibrary(readr)\n\n\n1.\nLet’s read in the first sheet of the file, which I have downloaded locally.\n\n#Reading in the data\nwhite_wine_tbl&lt;-read_excel(\"../white-wine.xlsx\", sheet=excel_sheets(\"../white-wine.xlsx\")[1])\n\n#Printing new tibble\nprint(white_wine_tbl,n=30)\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36            20.7      0.045\n 2              63               0.3           0.34             1.6      0.049\n 3              81               0.28          0.4              6.9      0.05 \n 4              72               0.23          0.32             8.5      0.058\n 5              72               0.23          0.32             8.5      0.058\n 6              81               0.28          0.4              6.9      0.05 \n 7              62               0.32          0.16             7        0.045\n 8               7               0.27          0.36            20.7      0.045\n 9              63               0.3           0.34             1.6      0.049\n10              81               0.22          0.43             1.5      0.044\n11              81               0.27          0.41             1.45     0.033\n12              86               0.23          0.4              4.2      0.035\n13              79               0.18          0.37             1.2      0.04 \n14              66               0.16          0.4              1.5      0.044\n15              83               0.42          0.62            19.2      0.04 \n16              66               0.17          0.38             1.5      0.032\n17              63               0.48          0.04             1.1      0.046\n18              62               0.66          0.48             1.2      0.029\n19              74               0.34          0.42             1.1      0.033\n20              65               0.31          0.14             7.5      0.044\n21              62               0.66          0.48             1.2      0.029\n22              64               0.31          0.38             2.9      0.038\n23              68               0.26          0.42             1.7      0.049\n24              76               0.67          0.14             1.5      0.074\n25              66               0.27          0.41             1.3      0.052\n26               7               0.25          0.32             9        0.046\n27              69               0.24          0.35             1        0.052\n28               7               0.28          0.39             8.7      0.051\n29              74               0.27          0.48             1.1      0.047\n30              72               0.32          0.36             2        0.033\n# ℹ 4,868 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\n\n2.\nNext, we will grab the clean variable names in the second sheet of the file and replace our original tibble column names with those.\n\n#Reading in column names\nwhite_wine_colnames&lt;-read_excel(\"../white-wine.xlsx\", \n                                sheet=excel_sheets(\"../white-wine.xlsx\")[2])\n\n#Assigning column names\ncolnames(white_wine_tbl)&lt;-white_wine_colnames$Variables\n\n\n\n3.\nBefore moving to the red wine dataset, we will add a variable indicating that these wines are all white wines.\n\n#Adding new variable indicating these are white wines\nwhite_wine_tbl$type=\"white\"\n\n#Printing updated tibble\nprint(white_wine_tbl,n=30)\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36          20.7      0.045\n 2            63             0.3         0.34           1.6      0.049\n 3            81             0.28        0.4            6.9      0.05 \n 4            72             0.23        0.32           8.5      0.058\n 5            72             0.23        0.32           8.5      0.058\n 6            81             0.28        0.4            6.9      0.05 \n 7            62             0.32        0.16           7        0.045\n 8             7             0.27        0.36          20.7      0.045\n 9            63             0.3         0.34           1.6      0.049\n10            81             0.22        0.43           1.5      0.044\n11            81             0.27        0.41           1.45     0.033\n12            86             0.23        0.4            4.2      0.035\n13            79             0.18        0.37           1.2      0.04 \n14            66             0.16        0.4            1.5      0.044\n15            83             0.42        0.62          19.2      0.04 \n16            66             0.17        0.38           1.5      0.032\n17            63             0.48        0.04           1.1      0.046\n18            62             0.66        0.48           1.2      0.029\n19            74             0.34        0.42           1.1      0.033\n20            65             0.31        0.14           7.5      0.044\n21            62             0.66        0.48           1.2      0.029\n22            64             0.31        0.38           2.9      0.038\n23            68             0.26        0.42           1.7      0.049\n24            76             0.67        0.14           1.5      0.074\n25            66             0.27        0.41           1.3      0.052\n26             7             0.25        0.32           9        0.046\n27            69             0.24        0.35           1        0.052\n28             7             0.28        0.39           8.7      0.051\n29            74             0.27        0.48           1.1      0.047\n30            72             0.32        0.36           2        0.033\n# ℹ 4,868 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\n4.\nNext, we will repeat this process for the red wine dataset, with the slight caveat that this file is semi-colon-delimited.\n\n#Reading in red wine data\nred_wine_tbl&lt;-read_delim(\"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\",delim=\";\")\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#Printing data to check that it read in correctly\nprint(red_wine_tbl,n=30)\n\n# A tibble: 1,599 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1             7.4              0.7            0                 1.9     0.076\n 2             7.8              0.88           0                 2.6     0.098\n 3             7.8              0.76           0.04              2.3     0.092\n 4            11.2              0.28           0.56              1.9     0.075\n 5             7.4              0.7            0                 1.9     0.076\n 6             7.4              0.66           0                 1.8     0.075\n 7             7.9              0.6            0.06              1.6     0.069\n 8             7.3              0.65           0                 1.2     0.065\n 9             7.8              0.58           0.02              2       0.073\n10             7.5              0.5            0.36              6.1     0.071\n11             6.7              0.58           0.08              1.8     0.097\n12             7.5              0.5            0.36              6.1     0.071\n13             5.6              0.615          0                 1.6     0.089\n14             7.8              0.61           0.29              1.6     0.114\n15             8.9              0.62           0.18              3.8     0.176\n16             8.9              0.62           0.19              3.9     0.17 \n17             8.5              0.28           0.56              1.8     0.092\n18             8.1              0.56           0.28              1.7     0.368\n19             7.4              0.59           0.08              4.4     0.086\n20             7.9              0.32           0.51              1.8     0.341\n21             8.9              0.22           0.48              1.8     0.077\n22             7.6              0.39           0.31              2.3     0.082\n23             7.9              0.43           0.21              1.6     0.106\n24             8.5              0.49           0.11              2.3     0.084\n25             6.9              0.4            0.14              2.4     0.085\n26             6.3              0.39           0.16              1.4     0.08 \n27             7.6              0.41           0.24              1.8     0.08 \n28             7.9              0.43           0.21              1.6     0.106\n29             7.1              0.71           0                 1.9     0.08 \n30             7.8              0.645          0                 2       0.082\n# ℹ 1,569 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n#Assigning clean column names\ncolnames(red_wine_tbl)&lt;-white_wine_colnames$Variables\n\n#Adding new variable indicating these are red wines\nred_wine_tbl$type=\"red\"\n\n#Printing data to check that variable names and type indicator are correct\nprint(red_wine_tbl,n=30)\n\n# A tibble: 1,599 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.4            0.7          0               1.9     0.076\n 2           7.8            0.88         0               2.6     0.098\n 3           7.8            0.76         0.04            2.3     0.092\n 4          11.2            0.28         0.56            1.9     0.075\n 5           7.4            0.7          0               1.9     0.076\n 6           7.4            0.66         0               1.8     0.075\n 7           7.9            0.6          0.06            1.6     0.069\n 8           7.3            0.65         0               1.2     0.065\n 9           7.8            0.58         0.02            2       0.073\n10           7.5            0.5          0.36            6.1     0.071\n11           6.7            0.58         0.08            1.8     0.097\n12           7.5            0.5          0.36            6.1     0.071\n13           5.6            0.615        0               1.6     0.089\n14           7.8            0.61         0.29            1.6     0.114\n15           8.9            0.62         0.18            3.8     0.176\n16           8.9            0.62         0.19            3.9     0.17 \n17           8.5            0.28         0.56            1.8     0.092\n18           8.1            0.56         0.28            1.7     0.368\n19           7.4            0.59         0.08            4.4     0.086\n20           7.9            0.32         0.51            1.8     0.341\n21           8.9            0.22         0.48            1.8     0.077\n22           7.6            0.39         0.31            2.3     0.082\n23           7.9            0.43         0.21            1.6     0.106\n24           8.5            0.49         0.11            2.3     0.084\n25           6.9            0.4          0.14            2.4     0.085\n26           6.3            0.39         0.16            1.4     0.08 \n27           7.6            0.41         0.24            1.8     0.08 \n28           7.9            0.43         0.21            1.6     0.106\n29           7.1            0.71         0               1.9     0.08 \n30           7.8            0.645        0               2       0.082\n# ℹ 1,569 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\n5.\nNext, we will bind the two wine tibbles. To demonstrate the code was successful, note the number of rows in the new tibble.\n\n#Binding wine datasets\nwine_tbl&lt;-bind_rows(red_wine_tbl,white_wine_tbl)\n\n\n\n6.\nNext, we will subset the data to only those of high quality (quality &gt; 6.5) with a reasonable alcohol value (alcohol &lt; 132).\n\n#Filtering out low-quality wines as well as those with unreasonable alcohol values\nwine_tbl |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  print(n=30)\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.3            0.65         0              1.2      0.065\n 2           7.8            0.58         0.02           2        0.073\n 3           8.5            0.28         0.56           1.8      0.092\n 4           8.1            0.38         0.28           2.1      0.066\n 5           7.5            0.52         0.16           1.9      0.085\n 6           8              0.59         0.16           1.8      0.065\n 7           5.4            0.835        0.08           1.2      0.046\n 8           9.6            0.32         0.47           1.4      0.056\n 9          12.8            0.3          0.74           2.6      0.095\n10          12.8            0.3          0.74           2.6      0.095\n11          11              0.3          0.58           2.1      0.054\n12           5.2            0.48         0.04           1.6      0.054\n13          15              0.21         0.44           2.2      0.075\n14          15              0.21         0.44           2.2      0.075\n15          10              0.31         0.47           2.6      0.085\n16          11.8            0.26         0.52           1.8      0.071\n17           7.9            0.35         0.46           3.6      0.078\n18          10.3            0.32         0.45           6.4      0.073\n19           8.9            0.4          0.32           5.6      0.087\n20           7.7            0.27         0.68           3.5      0.358\n21           8.9            0.4          0.32           5.6      0.087\n22           8.7            0.52         0.09           2.5      0.091\n23           8.7            0.52         0.09           2.5      0.091\n24           9.8            0.66         0.39           3.2      0.083\n25           9.8            0.66         0.39           3.2      0.083\n26          11.6            0.53         0.66           3.65     0.121\n27           7.9            0.65         0.01           2.5      0.078\n28          11.9            0.695        0.53           3.4      0.128\n29          12.5            0.28         0.54           2.3      0.082\n30           6.6            0.815        0.02           2.7      0.072\n# ℹ 1,176 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\n7.\nWe will continue our data manipulation by sorting the data from highest to lowest quality.\n\n#Filtering out low-quality wines as well as those with unreasonable alcohol values,\n#then sorting from highest to lowest quality\nwine_tbl |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(desc(quality)) |&gt;\n  print(n=30)\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1          91               0.27        0.45           10.6     0.035\n 2          66               0.36        0.29            1.6     0.021\n 3          74               0.24        0.36            2       0.031\n 4          69               0.36        0.34            4.2     0.018\n 5          71               0.26        0.49            2.2     0.032\n 6           7.9             0.35        0.46            3.6     0.078\n 7          10.3             0.32        0.45            6.4     0.073\n 8           5.6             0.85        0.05            1.4     0.045\n 9          12.6             0.31        0.72            2.2     0.072\n10          11.3             0.62        0.67            5.2     0.086\n11           9.4             0.3         0.56            2.8     0.08 \n12          10.7             0.35        0.53            2.6     0.07 \n13          10.7             0.35        0.53            2.6     0.07 \n14           5               0.42        0.24            2       0.06 \n15           7.8             0.57        0.09            2.3     0.065\n16           9.1             0.4         0.5             1.8     0.071\n17          10               0.26        0.54            1.9     0.083\n18           7.9             0.54        0.34            2.5     0.076\n19           8.6             0.42        0.39            1.8     0.068\n20           5.5             0.49        0.03            1.8     0.044\n21           7.2             0.33        0.33            1.7     0.061\n22           7.2             0.38        0.31            2       0.056\n23           7.4             0.36        0.3             1.8     0.074\n24          62               0.66        0.48            1.2     0.029\n25          62               0.66        0.48            1.2     0.029\n26          68               0.26        0.42            1.7     0.049\n27          67               0.23        0.31            2.1     0.046\n28          67               0.23        0.31            2.1     0.046\n29          52               0.44        0.04            1.4     0.036\n30          52               0.44        0.04            1.4     0.036\n# ℹ 1,176 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\n8.\nStill continuing our data manipulation, we will subset to only the variables containing “acid”, the alcohol variable, the type variable, and the quality variable.\n\n#Filtering out low-quality wines as well as those with unreasonable alcohol values,\n#then sorting from highest to lowest quality, then subsetting variables\nwine_tbl |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(desc(quality)) |&gt;\n  select(contains(\"acid\"), alcohol, type, quality) |&gt;\n  print(n=30)\n\n# A tibble: 1,206 × 6\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1          91               0.27        0.45   104   white       9\n 2          66               0.36        0.29   124   white       9\n 3          74               0.24        0.36   125   white       9\n 4          69               0.36        0.34   127   white       9\n 5          71               0.26        0.49   129   white       9\n 6           7.9             0.35        0.46    12.8 red         8\n 7          10.3             0.32        0.45    12.6 red         8\n 8           5.6             0.85        0.05    12.9 red         8\n 9          12.6             0.31        0.72     9.8 red         8\n10          11.3             0.62        0.67    13.4 red         8\n11           9.4             0.3         0.56    11.7 red         8\n12          10.7             0.35        0.53    11   red         8\n13          10.7             0.35        0.53    11   red         8\n14           5               0.42        0.24    14   red         8\n15           7.8             0.57        0.09    12.7 red         8\n16           9.1             0.4         0.5     12.5 red         8\n17          10               0.26        0.54    11.8 red         8\n18           7.9             0.54        0.34    13.1 red         8\n19           8.6             0.42        0.39    11.7 red         8\n20           5.5             0.49        0.03    14   red         8\n21           7.2             0.33        0.33    10   red         8\n22           7.2             0.38        0.31    11.3 red         8\n23           7.4             0.36        0.3     11.4 red         8\n24          62               0.66        0.48   128   white       8\n25          62               0.66        0.48   128   white       8\n26          68               0.26        0.42   105   white       8\n27          67               0.23        0.31   107   white       8\n28          67               0.23        0.31   107   white       8\n29          52               0.44        0.04   121   white       8\n30          52               0.44        0.04   121   white       8\n# ℹ 1,176 more rows\n\n\n\n\n9.\nFor our final data manipulation step, we will add the mean and standard deviation of alcohol for each unique value of quality.\n\n#Filtering out low-quality wines as well as those with unreasonable alcohol values,\n#then sorting from highest to lowest quality, then subsetting variables,\n#then calculating quality-specific means and standard deviations of alcohol\nwine_tbl |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(desc(quality)) |&gt;\n  select(contains(\"acid\"), alcohol, type, quality) |&gt;\n  group_by(quality) |&gt;\n  mutate(alcohol_mean=mean(alcohol),\n         alcohol_sd=sd(alcohol)) |&gt;\n  print(n=30)\n\n# A tibble: 1,206 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality alcohol_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1          91               0.27        0.45   104   white       9        122. \n 2          66               0.36        0.29   124   white       9        122. \n 3          74               0.24        0.36   125   white       9        122. \n 4          69               0.36        0.34   127   white       9        122. \n 5          71               0.26        0.49   129   white       9        122. \n 6           7.9             0.35        0.46    12.8 red         8         94.1\n 7          10.3             0.32        0.45    12.6 red         8         94.1\n 8           5.6             0.85        0.05    12.9 red         8         94.1\n 9          12.6             0.31        0.72     9.8 red         8         94.1\n10          11.3             0.62        0.67    13.4 red         8         94.1\n11           9.4             0.3         0.56    11.7 red         8         94.1\n12          10.7             0.35        0.53    11   red         8         94.1\n13          10.7             0.35        0.53    11   red         8         94.1\n14           5               0.42        0.24    14   red         8         94.1\n15           7.8             0.57        0.09    12.7 red         8         94.1\n16           9.1             0.4         0.5     12.5 red         8         94.1\n17          10               0.26        0.54    11.8 red         8         94.1\n18           7.9             0.54        0.34    13.1 red         8         94.1\n19           8.6             0.42        0.39    11.7 red         8         94.1\n20           5.5             0.49        0.03    14   red         8         94.1\n21           7.2             0.33        0.33    10   red         8         94.1\n22           7.2             0.38        0.31    11.3 red         8         94.1\n23           7.4             0.36        0.3     11.4 red         8         94.1\n24          62               0.66        0.48   128   white       8         94.1\n25          62               0.66        0.48   128   white       8         94.1\n26          68               0.26        0.42   105   white       8         94.1\n27          67               0.23        0.31   107   white       8         94.1\n28          67               0.23        0.31   107   white       8         94.1\n29          52               0.44        0.04   121   white       8         94.1\n30          52               0.44        0.04   121   white       8         94.1\n# ℹ 1,176 more rows\n# ℹ 1 more variable: alcohol_sd &lt;dbl&gt;",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html",
    "href": "pages/concepts.html",
    "title": "Conceptual Questions",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\nThe relative path I would specify is \"../MyData.csv\".\n\n\nWhat are the major benefits of using R Projects?\n\n\nR Projects allow us to seamlessly divide our work, as each project has its own working directory, environment, history, folder structure, and source documents. The explicit associationg with a single working directory means we can easily share our work by simply sharing this folder/repo and know the project code should work as long as we have utilized relative file paths. This aspect of R Projects makes them logical tools when utilizing Github repositories for storage and collaboration.\n\n\nWhat is Git and what is GitHub?\n\n\nGit is a version control software that helps track changes to files across time and allows multiple users to collobrate on the same project. Github is a hosting service that allows us to do Git-based projects on the internet and share them with the world virtually.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\nFirst, their printing is more elegant and informative, including the data type of each variable, not printing past the first ten rows, and indicating the total number of columns. Within the Quarto file, a user-friendly interactive table is printed. Second, when subsetting to a single column using the [] operator, the tibble is not coerced down to a vector unlike for data frames.\n\n\nRewrite the following nested function call using BaseR’s chaining operator:\n\n\n\narrange(filter(select(as_tibble(iris), starts_with(\"Petal\"), Species), Petal.Length &lt;\n      1.55), Species)\n\n\n\n\n`iris |&gt; \n   as_tibble() |&gt; \n   select(starts_with(\"Petal\"),Species) |&gt; \n   filter(Petal.Length &lt; 1.55) |&gt; \n   arrange(Species)`",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Homework 4",
    "section": "",
    "text": "Dear grader,\nPrepare to have some fun reviewing Tidyverse code and outputs!\nNote that each time I print a dataset, I print the first 30 rows so it is more clear my code worked.\nCass Crews",
    "crumbs": [
      "Home",
      "Homework 4"
    ]
  },
  {
    "objectID": "pages/read_delimited.html",
    "href": "pages/read_delimited.html",
    "title": "Reading Delimited Data",
    "section": "",
    "text": "For this task, we will be reading in and manipulating delimited data.\nFirst, we need to add in our packages.\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'purrr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'forcats' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nGlass Data\nWe will read in and manipulate some data on glass type and other characteristics.\n\n1.\nFirst, we will read in the file using read_csv as this is a comma-delimited file.\n\n#Reading in the data\nglass_tbl&lt;-read_csv(\"https://www4.stat.ncsu.edu/online/datasets/glass.data\",col_names=c(\"Id\",\"RI\",\"Na\",\"Mg\",\"Al\",\"Si\",\"K\",\"Ca\",\"Ba\",\"Fe\",\"Type_of_glass\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type_of_glass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#Printing result\nprint(glass_tbl,n=30)\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n11    11  1.52  12.7  3.46  1.56  73.2  0.67  8.09     0  0.24             1\n12    12  1.52  12.8  3.66  1.27  73.0  0.6   8.56     0  0                1\n13    13  1.52  12.9  3.43  1.4   73.3  0.69  8.05     0  0.24             1\n14    14  1.52  12.9  3.56  1.27  73.2  0.54  8.38     0  0.17             1\n15    15  1.52  12.6  3.59  1.31  73.3  0.58  8.5      0  0                1\n16    16  1.52  12.8  3.54  1.23  73.2  0.58  8.39     0  0                1\n17    17  1.52  12.7  3.67  1.16  73.1  0.61  8.7      0  0                1\n18    18  1.52  14.4  3.85  0.89  71.4  0.15  9.15     0  0                1\n19    19  1.52  13.9  3.73  1.18  72.1  0.06  8.89     0  0                1\n20    20  1.52  13.0  3.54  1.69  72.7  0.54  8.44     0  0.07             1\n21    21  1.52  12.8  3.55  1.49  72.8  0.54  8.52     0  0.19             1\n22    22  1.52  14.8  3.75  0.29  72.0  0.03  9        0  0                1\n23    23  1.52  12.8  3.62  1.29  72.8  0.59  8.7      0  0                1\n24    24  1.52  12.8  3.57  1.35  73.0  0.62  8.59     0  0                1\n25    25  1.52  13.4  3.5   1.15  72.8  0.5   8.43     0  0                1\n26    26  1.52  13.0  3.54  1.21  73    0.65  8.53     0  0                1\n27    27  1.52  13.2  3.48  1.41  72.6  0.59  8.43     0  0                1\n28    28  1.52  12.9  3.48  1.33  73.0  0.56  8.43     0  0                1\n29    29  1.52  12.6  3.52  1.43  73.2  0.57  8.54     0  0                1\n30    30  1.52  13.1  3.49  1.28  72.9  0.6   8.49     0  0                1\n# ℹ 184 more rows\n\n\n\n\n2.\nNext, we will rewrite Type_of_glass as a more informative character variable.\n\n#Replacing numeric type variable with correct type labels, then printing\nglass_tbl |&gt; \n  mutate(Type_of_glass=ifelse(Type_of_glass==1,\"building_windows_float_processed\",\n                        ifelse(Type_of_glass==2,\"building_windows_non_float_processed\",\n                          ifelse(Type_of_glass==3,\"vehicle_windows_float_processed\",\n                            ifelse(Type_of_glass==4,\"vehicle_windows_non_float_processed\",\n                              ifelse(Type_of_glass==5,\"containers\",\n                                ifelse(Type_of_glass==6,\"tableware\",\n                                  ifelse(Type_of_glass==7,\"headlamps\",\"error\")))))))) |&gt;\n  print(n=30)\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0    building_windows…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0    building_windows…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0    building_windows…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0    building_windows…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0    building_windows…\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26 building_windows…\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0    building_windows…\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0    building_windows…\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0    building_windows…\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11 building_windows…\n11    11  1.52  12.7  3.46  1.56  73.2  0.67  8.09     0  0.24 building_windows…\n12    12  1.52  12.8  3.66  1.27  73.0  0.6   8.56     0  0    building_windows…\n13    13  1.52  12.9  3.43  1.4   73.3  0.69  8.05     0  0.24 building_windows…\n14    14  1.52  12.9  3.56  1.27  73.2  0.54  8.38     0  0.17 building_windows…\n15    15  1.52  12.6  3.59  1.31  73.3  0.58  8.5      0  0    building_windows…\n16    16  1.52  12.8  3.54  1.23  73.2  0.58  8.39     0  0    building_windows…\n17    17  1.52  12.7  3.67  1.16  73.1  0.61  8.7      0  0    building_windows…\n18    18  1.52  14.4  3.85  0.89  71.4  0.15  9.15     0  0    building_windows…\n19    19  1.52  13.9  3.73  1.18  72.1  0.06  8.89     0  0    building_windows…\n20    20  1.52  13.0  3.54  1.69  72.7  0.54  8.44     0  0.07 building_windows…\n21    21  1.52  12.8  3.55  1.49  72.8  0.54  8.52     0  0.19 building_windows…\n22    22  1.52  14.8  3.75  0.29  72.0  0.03  9        0  0    building_windows…\n23    23  1.52  12.8  3.62  1.29  72.8  0.59  8.7      0  0    building_windows…\n24    24  1.52  12.8  3.57  1.35  73.0  0.62  8.59     0  0    building_windows…\n25    25  1.52  13.4  3.5   1.15  72.8  0.5   8.43     0  0    building_windows…\n26    26  1.52  13.0  3.54  1.21  73    0.65  8.53     0  0    building_windows…\n27    27  1.52  13.2  3.48  1.41  72.6  0.59  8.43     0  0    building_windows…\n28    28  1.52  12.9  3.48  1.33  73.0  0.56  8.43     0  0    building_windows…\n29    29  1.52  12.6  3.52  1.43  73.2  0.57  8.54     0  0    building_windows…\n30    30  1.52  13.1  3.49  1.28  72.9  0.6   8.49     0  0    building_windows…\n# ℹ 184 more rows\n\n\n\n\n3.\nFinally, we will continue the chain by filtering to only observations where Fe is less than 0.2 and the type is either “tableware” or “headlamps”.\n\n#Replacing numeric type variable with correct type labels,\n#filtering to obs where Fe&lt; 0.2 and type is either \"tableware\" or \"headlamps\", then printing\nglass_tbl |&gt; \n  mutate(Type_of_glass=ifelse(Type_of_glass==1,\"building_windows_float_processed\",\n                        ifelse(Type_of_glass==2,\"building_windows_non_float_processed\",\n                          ifelse(Type_of_glass==3,\"vehicle_windows_float_processed\",\n                            ifelse(Type_of_glass==4,\"vehicle_windows_non_float_processed\",\n                              ifelse(Type_of_glass==5,\"containers\",\n                                ifelse(Type_of_glass==6,\"tableware\",\n                                  ifelse(Type_of_glass==7,\"headlamps\",\"error\")))))))) |&gt;\n  filter(Fe&lt; 0.2, Type_of_glass %in% c(\"tableware\",\"headlamps\")) |&gt;\n  print(n=30)\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0     0    tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0     0    tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0     0    tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0     0    tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0     0    tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0     0    tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0     0    tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0     0    tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0     0    tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19  0    headlamps    \n11   187  1.52  14.3  3.26  2.22  71.2  1.46  5.79  1.63  0    headlamps    \n12   188  1.52  13.4  3.34  1.23  72.4  0.6   8.83  0     0    headlamps    \n13   189  1.52  14.9  2.2   2.06  70.3  0.76  9.76  0     0    headlamps    \n14   190  1.52  15.8  1.83  1.31  70.4  0.31  8.61  1.68  0    headlamps    \n15   191  1.52  13.9  1.78  1.79  73.1  0     8.67  0.76  0    headlamps    \n16   192  1.52  14.8  0     2.38  73.3  0     8.76  0.64  0.09 headlamps    \n17   193  1.52  14.2  0     2.79  73.5  0.04  9.04  0.4   0.09 headlamps    \n18   194  1.52  14.8  0     2     73.0  0     8.53  1.59  0.08 headlamps    \n19   195  1.52  14.6  0     1.98  73.3  0     8.52  1.57  0.07 headlamps    \n20   196  1.52  14.1  0     2.68  73.4  0.08  9.07  0.61  0.05 headlamps    \n21   197  1.52  13.9  0     2.54  73.2  0.14  9.41  0.81  0.01 headlamps    \n22   198  1.52  14.7  0     2.34  73.3  0     8.95  0.66  0    headlamps    \n23   199  1.52  14.4  0     2.66  73.1  0.04  9.08  0.64  0    headlamps    \n24   200  1.52  15.0  0     2.51  73.0  0.05  8.83  0.53  0    headlamps    \n25   201  1.52  15.2  0     2.25  73.5  0     8.34  0.63  0    headlamps    \n26   202  1.52  12.0  0     1.19  75.2  2.7   8.93  0     0    headlamps    \n27   203  1.52  14.8  0     2.42  73.7  0     8.39  0.56  0    headlamps    \n28   204  1.52  14.8  0     1.99  73.1  0     8.28  1.71  0    headlamps    \n29   205  1.52  15.0  0     2.27  73.3  0     8.71  0.67  0    headlamps    \n30   206  1.52  15.0  0     1.8   73.0  0     8.61  1.55  0    headlamps    \n# ℹ 8 more rows\n\n\n\n\n\nYeast Data\nNext, we will read in and manipulate some data on yeast.\nADT1_YEAST 0.58 0.61 0.47 0.13 0.50 0.00 0.48 0.22 MIT\n\n1.\nFirst, we will read in these fixed-width data.\n\n#Reading in data file\nyeast_tbl&lt;-read_fwf(\"https://www4.stat.ncsu.edu/online/datasets/yeast.data\",\n                    fwf_widths(c(12,6,6,6,6,6,6,6,6,3),\n                               col_names=c(\"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\"class\")))\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\n\nchr (2): seq_name, class\ndbl (8): mcg, gvh, alm, mit, erl, pox, vac, nuc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#Printing resultant tibble\nprint(yeast_tbl,n=30)\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n11 ACE1_YEAST  0.43  0.39  0.54  0.21   0.5   0    0.53  0.27 NUC  \n12 ACE2_YEAST  0.42  0.37  0.59  0.2    0.5   0    0.52  0.29 NUC  \n13 ACH1_YEAST  0.4   0.42  0.57  0.35   0.5   0    0.53  0.25 CYT  \n14 ACON_YEAST  0.6   0.4   0.52  0.46   0.5   0    0.53  0.22 MIT  \n15 ACR1_YEAST  0.66  0.55  0.45  0.19   0.5   0    0.46  0.22 MIT  \n16 ACT_YEAST   0.46  0.44  0.52  0.11   0.5   0    0.5   0.22 CYT  \n17 ACT2_YEAST  0.47  0.39  0.5   0.11   0.5   0    0.49  0.4  CYT  \n18 ACT3_YEAST  0.58  0.47  0.54  0.11   0.5   0    0.51  0.26 NUC  \n19 ACT5_YEAST  0.5   0.34  0.55  0.21   0.5   0    0.49  0.22 NUC  \n20 ADA2_YEAST  0.61  0.6   0.55  0.21   0.5   0    0.5   0.25 NUC  \n21 C1TC_YEAST  0.45  0.4   0.5   0.16   0.5   0    0.5   0.22 CYT  \n22 PUR4_YEAST  0.43  0.44  0.48  0.22   0.5   0    0.51  0.22 CYT  \n23 PUR3_YEAST  0.73  0.63  0.42  0.3    0.5   0    0.49  0.22 CYT  \n24 ADH1_YEAST  0.43  0.53  0.52  0.13   0.5   0    0.55  0.22 CYT  \n25 ADH2_YEAST  0.46  0.53  0.52  0.15   0.5   0    0.58  0.22 CYT  \n26 ADH3_YEAST  0.51  0.51  0.52  0.51   0.5   0    0.54  0.22 MIT  \n27 ADH4_YEAST  0.59  0.45  0.53  0.19   0.5   0    0.59  0.27 CYT  \n28 KAD1_YEAST  0.57  0.47  0.6   0.18   0.5   0    0.51  0.22 CYT  \n29 KAD2_YEAST  0.63  0.67  0.57  0.24   0.5   0    0.49  0.22 MIT  \n30 ADP1_YEAST  0.8   0.88  0.36  0.39   0.5   0    0.56  0.33 ME1  \n# ℹ 1,454 more rows\n\n\n\n\n2.\nNext, we will create a chain that removes the seq_name and nuc variables.\n\n#Removing seq_name and nuc\nyeast_tbl |&gt; \n  select(-seq_name,-nuc) |&gt;\n  print(n=30)\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm   mit   erl   pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT  \n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT  \n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT  \n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC  \n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT  \n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT  \n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT  \n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC  \n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT  \n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT  \n11  0.43  0.39  0.54  0.21   0.5   0    0.53 NUC  \n12  0.42  0.37  0.59  0.2    0.5   0    0.52 NUC  \n13  0.4   0.42  0.57  0.35   0.5   0    0.53 CYT  \n14  0.6   0.4   0.52  0.46   0.5   0    0.53 MIT  \n15  0.66  0.55  0.45  0.19   0.5   0    0.46 MIT  \n16  0.46  0.44  0.52  0.11   0.5   0    0.5  CYT  \n17  0.47  0.39  0.5   0.11   0.5   0    0.49 CYT  \n18  0.58  0.47  0.54  0.11   0.5   0    0.51 NUC  \n19  0.5   0.34  0.55  0.21   0.5   0    0.49 NUC  \n20  0.61  0.6   0.55  0.21   0.5   0    0.5  NUC  \n21  0.45  0.4   0.5   0.16   0.5   0    0.5  CYT  \n22  0.43  0.44  0.48  0.22   0.5   0    0.51 CYT  \n23  0.73  0.63  0.42  0.3    0.5   0    0.49 CYT  \n24  0.43  0.53  0.52  0.13   0.5   0    0.55 CYT  \n25  0.46  0.53  0.52  0.15   0.5   0    0.58 CYT  \n26  0.51  0.51  0.52  0.51   0.5   0    0.54 MIT  \n27  0.59  0.45  0.53  0.19   0.5   0    0.59 CYT  \n28  0.57  0.47  0.6   0.18   0.5   0    0.51 CYT  \n29  0.63  0.67  0.57  0.24   0.5   0    0.49 MIT  \n30  0.8   0.88  0.36  0.39   0.5   0    0.56 ME1  \n# ℹ 1,454 more rows\n\n\n\n\n3.\nFinally, we will continue the chain and create columns containing means and medians for each numeric variable at each class grouping.\n\n#Removing seq_name and nuc, then generating means and medians by class for each\n#numeric variable\nyeast_tbl |&gt; \n  select(-seq_name,-nuc) |&gt;\n  group_by(class) |&gt;\n  mutate(across(where(is.numeric),list(mean=mean,median=median),.names=\"{.fn}_{.col}\")) |&gt;\n  print(n=30)\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mean_mcg median_mcg mean_gvh\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521       0.51    0.533\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521       0.51    0.533\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521       0.51    0.533\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452       0.45    0.456\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521       0.51    0.533\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481       0.48    0.470\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521       0.51    0.533\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452       0.45    0.456\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521       0.51    0.533\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481       0.48    0.470\n11  0.43  0.39  0.54  0.21   0.5   0    0.53 NUC      0.452       0.45    0.456\n12  0.42  0.37  0.59  0.2    0.5   0    0.52 NUC      0.452       0.45    0.456\n13  0.4   0.42  0.57  0.35   0.5   0    0.53 CYT      0.481       0.48    0.470\n14  0.6   0.4   0.52  0.46   0.5   0    0.53 MIT      0.521       0.51    0.533\n15  0.66  0.55  0.45  0.19   0.5   0    0.46 MIT      0.521       0.51    0.533\n16  0.46  0.44  0.52  0.11   0.5   0    0.5  CYT      0.481       0.48    0.470\n17  0.47  0.39  0.5   0.11   0.5   0    0.49 CYT      0.481       0.48    0.470\n18  0.58  0.47  0.54  0.11   0.5   0    0.51 NUC      0.452       0.45    0.456\n19  0.5   0.34  0.55  0.21   0.5   0    0.49 NUC      0.452       0.45    0.456\n20  0.61  0.6   0.55  0.21   0.5   0    0.5  NUC      0.452       0.45    0.456\n21  0.45  0.4   0.5   0.16   0.5   0    0.5  CYT      0.481       0.48    0.470\n22  0.43  0.44  0.48  0.22   0.5   0    0.51 CYT      0.481       0.48    0.470\n23  0.73  0.63  0.42  0.3    0.5   0    0.49 CYT      0.481       0.48    0.470\n24  0.43  0.53  0.52  0.13   0.5   0    0.55 CYT      0.481       0.48    0.470\n25  0.46  0.53  0.52  0.15   0.5   0    0.58 CYT      0.481       0.48    0.470\n26  0.51  0.51  0.52  0.51   0.5   0    0.54 MIT      0.521       0.51    0.533\n27  0.59  0.45  0.53  0.19   0.5   0    0.59 CYT      0.481       0.48    0.470\n28  0.57  0.47  0.6   0.18   0.5   0    0.51 CYT      0.481       0.48    0.470\n29  0.63  0.67  0.57  0.24   0.5   0    0.49 MIT      0.521       0.51    0.533\n30  0.8   0.88  0.36  0.39   0.5   0    0.56 ME1      0.789       0.78    0.757\n# ℹ 1,454 more rows\n# ℹ 11 more variables: median_gvh &lt;dbl&gt;, mean_alm &lt;dbl&gt;, median_alm &lt;dbl&gt;,\n#   mean_mit &lt;dbl&gt;, median_mit &lt;dbl&gt;, mean_erl &lt;dbl&gt;, median_erl &lt;dbl&gt;,\n#   mean_pox &lt;dbl&gt;, median_pox &lt;dbl&gt;, mean_vac &lt;dbl&gt;, median_vac &lt;dbl&gt;",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  }
]